--------------------------------------------------------
-- Archivo creado  - sábado-noviembre-18-2017   
--------------------------------------------------------
DROP VIEW "ASSIGMENTS2"."INFO_OF_THE_BILLS_PATIENTS";
DROP TABLE "ASSIGMENTS2"."BILL_DETAILS";
DROP TABLE "ASSIGMENTS2"."BILLS";
DROP TABLE "ASSIGMENTS2"."CITIES";
DROP TABLE "ASSIGMENTS2"."COST_CENTERS";
DROP TABLE "ASSIGMENTS2"."ITEMS";
DROP TABLE "ASSIGMENTS2"."PATIENTS";
DROP TABLE "ASSIGMENTS2"."STATES";
DROP SEQUENCE "ASSIGMENTS2"."ID_BILL_DETAILS";
DROP SEQUENCE "ASSIGMENTS2"."ID_BILLS";
DROP SEQUENCE "ASSIGMENTS2"."ID_CITIES";
DROP SEQUENCE "ASSIGMENTS2"."ID_COST_CENTERS";
DROP SEQUENCE "ASSIGMENTS2"."ID_ITEMS";
DROP SEQUENCE "ASSIGMENTS2"."ID_PATIENTS";
DROP SEQUENCE "ASSIGMENTS2"."ID_STATES";
DROP PROCEDURE "ASSIGMENTS2"."INCREASE_THE_COST";
DROP FUNCTION "ASSIGMENTS2"."TOTAL_BALANCE_FOR_ITEMS";
DROP FUNCTION "ASSIGMENTS2"."TOTAL_OF_NUMBER_OF_ITEMS";
--------------------------------------------------------
--  DDL for View INFO_OF_THE_BILLS_PATIENTS
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "ASSIGMENTS2"."INFO_OF_THE_BILLS_PATIENTS" ("PATIENT_NUMBER", "PATIENT_NAME", "PATIENT_ADDRESS", "DATE_ADMITTED", "DISCHARGUE_DATE", "TOTAL_BALANCE_ROOM_BOARD", "TOTAL_ITEMS_ROOM_BOARD", "TOTAL_BALANCE_LABORATORY", "TOTAL_ITEMS_LABORATORY", "TOTAL_BALANCE_RADIOLOGY", "TOTAL_ITEMS_RADIOLOGY") AS 
  SELECT  DISTINCT 
        PATIENTS.PATIENT_NUMBER,
        PATIENTS.PATIENT_NAME,
        PATIENTS.PATIENT_ADDRESS,
        BILLS.DATE_ADMITTED,
        BILLS.DISCHARGUE_DATE,        
        (select TOTAL_BALANCE_FOR_ITEMS ('1','1') FROM dual) TOTAL_BALANCE_ROOM_BOARD ,
        (select TOTAL_OF_NUMBER_OF_ITEMS('1','1') from dual) TOTAL_ITEMS_ROOM_BOARD ,
        (select TOTAL_BALANCE_FOR_ITEMS('2','1') FROM dual) TOTAL_BALANCE_LABORATORY,
        (select TOTAL_OF_NUMBER_OF_ITEMS('2','1') from dual) TOTAL_ITEMS_LABORATORY,
        (select TOTAL_BALANCE_FOR_ITEMS('3','1') FROM dual) TOTAL_BALANCE_RADIOLOGY,
        (select TOTAL_OF_NUMBER_OF_ITEMS('3','1') from dual) TOTAL_ITEMS_RADIOLOGY           
FROM        ITEMS
INNER JOIN  COST_CENTERS
ON          COST_CENTERS.ID         =       ITEMS.COST_CENTERS_ID
INNER JOIN  BILL_DETAILS
ON          ITEMS.ID                =       BILL_DETAILS.ITEMS_ID
INNER JOIN  BILLS
ON          BILL_DETAILS.BILLS_ID   =       BILLS.ID
INNER JOIN  PATIENTS 
ON          BILLS.PATIENTS_ID       =       PATIENTS.ID
WHERE       BILLS.PATIENTS_ID       =       PATIENTS.ID AND BILLS.ID = 1
ORDER BY    PATIENTS.PATIENT_NUMBER
;
--------------------------------------------------------
--  DDL for Table BILL_DETAILS
--------------------------------------------------------

  CREATE TABLE "ASSIGMENTS2"."BILL_DETAILS" 
   (	"ID" NUMBER, 
	"DATE_CHARGE" VARCHAR2(50 BYTE), 
	"BILLS_ID" NUMBER, 
	"ITEMS_ID" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "ASSIGMENTS2" ;
--------------------------------------------------------
--  DDL for Table BILLS
--------------------------------------------------------

  CREATE TABLE "ASSIGMENTS2"."BILLS" 
   (	"ID" NUMBER, 
	"DATES" VARCHAR2(10 BYTE), 
	"DATE_ADMITTED" VARCHAR2(10 BYTE), 
	"DISCHARGUE_DATE" VARCHAR2(10 BYTE), 
	"BALANCE_DUE" NUMBER(*,0), 
	"PATIENTS_ID" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "ASSIGMENTS2" ;
--------------------------------------------------------
--  DDL for Table CITIES
--------------------------------------------------------

  CREATE TABLE "ASSIGMENTS2"."CITIES" 
   (	"ID" NUMBER, 
	"CITY" VARCHAR2(200 BYTE), 
	"ZIP" VARCHAR2(50 BYTE), 
	"STATES_ID" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "ASSIGMENTS2" ;
--------------------------------------------------------
--  DDL for Table COST_CENTERS
--------------------------------------------------------

  CREATE TABLE "ASSIGMENTS2"."COST_CENTERS" 
   (	"ID" NUMBER, 
	"COST_CODE" NUMBER, 
	"COST_NAME" VARCHAR2(200 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "ASSIGMENTS2" ;
--------------------------------------------------------
--  DDL for Table ITEMS
--------------------------------------------------------

  CREATE TABLE "ASSIGMENTS2"."ITEMS" 
   (	"ID" NUMBER, 
	"ITEM_CODE" NUMBER, 
	"DESCRIPTION" VARCHAR2(200 BYTE), 
	"CHARGUE" NUMBER(*,0), 
	"COST_CENTERS_ID" NUMBER, 
	"UNITS_AVAILABLE" NUMBER(12,0) DEFAULT 500
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "ASSIGMENTS2" ;
--------------------------------------------------------
--  DDL for Table PATIENTS
--------------------------------------------------------

  CREATE TABLE "ASSIGMENTS2"."PATIENTS" 
   (	"ID" NUMBER, 
	"PATIENT_NUMBER" NUMBER, 
	"PATIENT_NAME" VARCHAR2(200 BYTE), 
	"PATIENT_ADDRESS" VARCHAR2(200 BYTE), 
	"CITIES_ID" NUMBER(20,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "ASSIGMENTS2" ;
--------------------------------------------------------
--  DDL for Table STATES
--------------------------------------------------------

  CREATE TABLE "ASSIGMENTS2"."STATES" 
   (	"ID" NUMBER, 
	"STATE_NAME" VARCHAR2(200 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "ASSIGMENTS2" ;
--------------------------------------------------------
--  DDL for Sequence ID_BILL_DETAILS
--------------------------------------------------------

   CREATE SEQUENCE  "ASSIGMENTS2"."ID_BILL_DETAILS"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 41 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence ID_BILLS
--------------------------------------------------------

   CREATE SEQUENCE  "ASSIGMENTS2"."ID_BILLS"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence ID_CITIES
--------------------------------------------------------

   CREATE SEQUENCE  "ASSIGMENTS2"."ID_CITIES"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence ID_COST_CENTERS
--------------------------------------------------------

   CREATE SEQUENCE  "ASSIGMENTS2"."ID_COST_CENTERS"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence ID_ITEMS
--------------------------------------------------------

   CREATE SEQUENCE  "ASSIGMENTS2"."ID_ITEMS"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence ID_PATIENTS
--------------------------------------------------------

   CREATE SEQUENCE  "ASSIGMENTS2"."ID_PATIENTS"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence ID_STATES
--------------------------------------------------------

   CREATE SEQUENCE  "ASSIGMENTS2"."ID_STATES"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;
REM INSERTING into ASSIGMENTS2.BILL_DETAILS
SET DEFINE OFF;
Insert into ASSIGMENTS2.BILL_DETAILS (ID,DATE_CHARGE,BILLS_ID,ITEMS_ID) values ('1','20170102','1','1');
Insert into ASSIGMENTS2.BILL_DETAILS (ID,DATE_CHARGE,BILLS_ID,ITEMS_ID) values ('2','20170202','2','1');
Insert into ASSIGMENTS2.BILL_DETAILS (ID,DATE_CHARGE,BILLS_ID,ITEMS_ID) values ('3','20170202','2','2');
Insert into ASSIGMENTS2.BILL_DETAILS (ID,DATE_CHARGE,BILLS_ID,ITEMS_ID) values ('4','20170302','3','3');
Insert into ASSIGMENTS2.BILL_DETAILS (ID,DATE_CHARGE,BILLS_ID,ITEMS_ID) values ('5','20170402','4','4');
Insert into ASSIGMENTS2.BILL_DETAILS (ID,DATE_CHARGE,BILLS_ID,ITEMS_ID) values ('6','20170402','4','5');
Insert into ASSIGMENTS2.BILL_DETAILS (ID,DATE_CHARGE,BILLS_ID,ITEMS_ID) values ('7','20170402','4','6');
Insert into ASSIGMENTS2.BILL_DETAILS (ID,DATE_CHARGE,BILLS_ID,ITEMS_ID) values ('8','20170502','5','7');
Insert into ASSIGMENTS2.BILL_DETAILS (ID,DATE_CHARGE,BILLS_ID,ITEMS_ID) values ('9','20170602','6','8');
Insert into ASSIGMENTS2.BILL_DETAILS (ID,DATE_CHARGE,BILLS_ID,ITEMS_ID) values ('10','20170602','6','9');
Insert into ASSIGMENTS2.BILL_DETAILS (ID,DATE_CHARGE,BILLS_ID,ITEMS_ID) values ('11','20170702','7','10');
Insert into ASSIGMENTS2.BILL_DETAILS (ID,DATE_CHARGE,BILLS_ID,ITEMS_ID) values ('12','20170802','8','1');
Insert into ASSIGMENTS2.BILL_DETAILS (ID,DATE_CHARGE,BILLS_ID,ITEMS_ID) values ('13','20170802','8','2');
Insert into ASSIGMENTS2.BILL_DETAILS (ID,DATE_CHARGE,BILLS_ID,ITEMS_ID) values ('14','20170902','9','3');
Insert into ASSIGMENTS2.BILL_DETAILS (ID,DATE_CHARGE,BILLS_ID,ITEMS_ID) values ('15','20170902','9','4');
Insert into ASSIGMENTS2.BILL_DETAILS (ID,DATE_CHARGE,BILLS_ID,ITEMS_ID) values ('23','20170102','12','13');
Insert into ASSIGMENTS2.BILL_DETAILS (ID,DATE_CHARGE,BILLS_ID,ITEMS_ID) values ('17','20171003','1','1');
Insert into ASSIGMENTS2.BILL_DETAILS (ID,DATE_CHARGE,BILLS_ID,ITEMS_ID) values ('18','20171004','1','1');
Insert into ASSIGMENTS2.BILL_DETAILS (ID,DATE_CHARGE,BILLS_ID,ITEMS_ID) values ('24','20170102','13','1');
Insert into ASSIGMENTS2.BILL_DETAILS (ID,DATE_CHARGE,BILLS_ID,ITEMS_ID) values ('25','20170102','1','1');
Insert into ASSIGMENTS2.BILL_DETAILS (ID,DATE_CHARGE,BILLS_ID,ITEMS_ID) values ('26','20170102','1','3');
REM INSERTING into ASSIGMENTS2.BILLS
SET DEFINE OFF;
Insert into ASSIGMENTS2.BILLS (ID,DATES,DATE_ADMITTED,DISCHARGUE_DATE,BALANCE_DUE,PATIENTS_ID) values ('1','20170101','20170102','20170103','1001','1');
Insert into ASSIGMENTS2.BILLS (ID,DATES,DATE_ADMITTED,DISCHARGUE_DATE,BALANCE_DUE,PATIENTS_ID) values ('2','20170201','20170202','20170203','2003','2');
Insert into ASSIGMENTS2.BILLS (ID,DATES,DATE_ADMITTED,DISCHARGUE_DATE,BALANCE_DUE,PATIENTS_ID) values ('3','20170301','20170302','20170303','2001','3');
Insert into ASSIGMENTS2.BILLS (ID,DATES,DATE_ADMITTED,DISCHARGUE_DATE,BALANCE_DUE,PATIENTS_ID) values ('4','20170401','20170402','20170403','8005','4');
Insert into ASSIGMENTS2.BILLS (ID,DATES,DATE_ADMITTED,DISCHARGUE_DATE,BALANCE_DUE,PATIENTS_ID) values ('5','20170501','20170502','20170503','4001','5');
Insert into ASSIGMENTS2.BILLS (ID,DATES,DATE_ADMITTED,DISCHARGUE_DATE,BALANCE_DUE,PATIENTS_ID) values ('6','20170601','20170602','20170603','9003','6');
Insert into ASSIGMENTS2.BILLS (ID,DATES,DATE_ADMITTED,DISCHARGUE_DATE,BALANCE_DUE,PATIENTS_ID) values ('7','20170701','20170702','20170703','5002','7');
Insert into ASSIGMENTS2.BILLS (ID,DATES,DATE_ADMITTED,DISCHARGUE_DATE,BALANCE_DUE,PATIENTS_ID) values ('8','20170801','20170802','20170803','2003','8');
Insert into ASSIGMENTS2.BILLS (ID,DATES,DATE_ADMITTED,DISCHARGUE_DATE,BALANCE_DUE,PATIENTS_ID) values ('9','20170901','20170902','20170903','4003','9');
Insert into ASSIGMENTS2.BILLS (ID,DATES,DATE_ADMITTED,DISCHARGUE_DATE,BALANCE_DUE,PATIENTS_ID) values ('11','20171001','20171002','20171003','3001','10');
Insert into ASSIGMENTS2.BILLS (ID,DATES,DATE_ADMITTED,DISCHARGUE_DATE,BALANCE_DUE,PATIENTS_ID) values ('12','20171080','20171080','20171080','3080','10');
Insert into ASSIGMENTS2.BILLS (ID,DATES,DATE_ADMITTED,DISCHARGUE_DATE,BALANCE_DUE,PATIENTS_ID) values ('13','20170101','20170102','20170103','1001','1');
REM INSERTING into ASSIGMENTS2.CITIES
SET DEFINE OFF;
Insert into ASSIGMENTS2.CITIES (ID,CITY,ZIP,STATES_ID) values ('1','Medellin','0001','1');
Insert into ASSIGMENTS2.CITIES (ID,CITY,ZIP,STATES_ID) values ('2','Bógota','0002','2');
Insert into ASSIGMENTS2.CITIES (ID,CITY,ZIP,STATES_ID) values ('3','Barranquilla','0003','3');
REM INSERTING into ASSIGMENTS2.COST_CENTERS
SET DEFINE OFF;
Insert into ASSIGMENTS2.COST_CENTERS (ID,COST_CODE,COST_NAME) values ('1','1','Room');
Insert into ASSIGMENTS2.COST_CENTERS (ID,COST_CODE,COST_NAME) values ('2','2','Laboratory');
Insert into ASSIGMENTS2.COST_CENTERS (ID,COST_CODE,COST_NAME) values ('3','3','Radiology');
Insert into ASSIGMENTS2.COST_CENTERS (ID,COST_CODE,COST_NAME) values ('4','4','Centro Costo 4');
Insert into ASSIGMENTS2.COST_CENTERS (ID,COST_CODE,COST_NAME) values ('5','5','Centro Costo 5');
REM INSERTING into ASSIGMENTS2.ITEMS
SET DEFINE OFF;
Insert into ASSIGMENTS2.ITEMS (ID,ITEM_CODE,DESCRIPTION,CHARGUE,COST_CENTERS_ID,UNITS_AVAILABLE) values ('1','1','Item 1','1041','1','498');
Insert into ASSIGMENTS2.ITEMS (ID,ITEM_CODE,DESCRIPTION,CHARGUE,COST_CENTERS_ID,UNITS_AVAILABLE) values ('2','2','Item 2','1042','1','500');
Insert into ASSIGMENTS2.ITEMS (ID,ITEM_CODE,DESCRIPTION,CHARGUE,COST_CENTERS_ID,UNITS_AVAILABLE) values ('3','3','Item 3','2143','2','499');
Insert into ASSIGMENTS2.ITEMS (ID,ITEM_CODE,DESCRIPTION,CHARGUE,COST_CENTERS_ID,UNITS_AVAILABLE) values ('4','4','Item 4','2145','2','500');
Insert into ASSIGMENTS2.ITEMS (ID,ITEM_CODE,DESCRIPTION,CHARGUE,COST_CENTERS_ID,UNITS_AVAILABLE) values ('5','5','Item 5','3246','3','500');
Insert into ASSIGMENTS2.ITEMS (ID,ITEM_CODE,DESCRIPTION,CHARGUE,COST_CENTERS_ID,UNITS_AVAILABLE) values ('6','6','Item 6','3247','3','500');
Insert into ASSIGMENTS2.ITEMS (ID,ITEM_CODE,DESCRIPTION,CHARGUE,COST_CENTERS_ID,UNITS_AVAILABLE) values ('7','7','Item 7','4001','4','500');
Insert into ASSIGMENTS2.ITEMS (ID,ITEM_CODE,DESCRIPTION,CHARGUE,COST_CENTERS_ID,UNITS_AVAILABLE) values ('8','8','Item 8','4002','4','500');
Insert into ASSIGMENTS2.ITEMS (ID,ITEM_CODE,DESCRIPTION,CHARGUE,COST_CENTERS_ID,UNITS_AVAILABLE) values ('9','9','Item 9','5001','5','500');
Insert into ASSIGMENTS2.ITEMS (ID,ITEM_CODE,DESCRIPTION,CHARGUE,COST_CENTERS_ID,UNITS_AVAILABLE) values ('10','10','Item 10','5002','5','500');
Insert into ASSIGMENTS2.ITEMS (ID,ITEM_CODE,DESCRIPTION,CHARGUE,COST_CENTERS_ID,UNITS_AVAILABLE) values ('12','80','Item X','1040','2','500');
Insert into ASSIGMENTS2.ITEMS (ID,ITEM_CODE,DESCRIPTION,CHARGUE,COST_CENTERS_ID,UNITS_AVAILABLE) values ('13','90','Item 90','1040','2','499');
REM INSERTING into ASSIGMENTS2.PATIENTS
SET DEFINE OFF;
Insert into ASSIGMENTS2.PATIENTS (ID,PATIENT_NUMBER,PATIENT_NAME,PATIENT_ADDRESS,CITIES_ID) values ('1','1','Paciente 1','Calle 1','1');
Insert into ASSIGMENTS2.PATIENTS (ID,PATIENT_NUMBER,PATIENT_NAME,PATIENT_ADDRESS,CITIES_ID) values ('2','2','Paciente 2','Calle 2','2');
Insert into ASSIGMENTS2.PATIENTS (ID,PATIENT_NUMBER,PATIENT_NAME,PATIENT_ADDRESS,CITIES_ID) values ('3','3','Paciente 3','Calle 3','3');
Insert into ASSIGMENTS2.PATIENTS (ID,PATIENT_NUMBER,PATIENT_NAME,PATIENT_ADDRESS,CITIES_ID) values ('4','4','Paciente 4','Calle 4','1');
Insert into ASSIGMENTS2.PATIENTS (ID,PATIENT_NUMBER,PATIENT_NAME,PATIENT_ADDRESS,CITIES_ID) values ('5','5','Paciente 5','Calle 5','2');
Insert into ASSIGMENTS2.PATIENTS (ID,PATIENT_NUMBER,PATIENT_NAME,PATIENT_ADDRESS,CITIES_ID) values ('6','6','Paciente 6','Calle 6','3');
Insert into ASSIGMENTS2.PATIENTS (ID,PATIENT_NUMBER,PATIENT_NAME,PATIENT_ADDRESS,CITIES_ID) values ('7','7','Paciente 7','Calle 7','1');
Insert into ASSIGMENTS2.PATIENTS (ID,PATIENT_NUMBER,PATIENT_NAME,PATIENT_ADDRESS,CITIES_ID) values ('8','8','Paciente 8','Calle 8','2');
Insert into ASSIGMENTS2.PATIENTS (ID,PATIENT_NUMBER,PATIENT_NAME,PATIENT_ADDRESS,CITIES_ID) values ('9','9','Paciente 9','Calle 9','3');
Insert into ASSIGMENTS2.PATIENTS (ID,PATIENT_NUMBER,PATIENT_NAME,PATIENT_ADDRESS,CITIES_ID) values ('10','10','Paciente 10','Calle 10','1');
Insert into ASSIGMENTS2.PATIENTS (ID,PATIENT_NUMBER,PATIENT_NAME,PATIENT_ADDRESS,CITIES_ID) values ('11','20','Paciente 1','Calle 1','1');
REM INSERTING into ASSIGMENTS2.STATES
SET DEFINE OFF;
Insert into ASSIGMENTS2.STATES (ID,STATE_NAME) values ('1','Antioquia');
Insert into ASSIGMENTS2.STATES (ID,STATE_NAME) values ('2','Cundinamarca');
Insert into ASSIGMENTS2.STATES (ID,STATE_NAME) values ('3','Atlántico');
REM INSERTING into ASSIGMENTS2.INFO_OF_THE_BILLS_PATIENTS
SET DEFINE OFF;
Insert into ASSIGMENTS2.INFO_OF_THE_BILLS_PATIENTS (PATIENT_NUMBER,PATIENT_NAME,PATIENT_ADDRESS,DATE_ADMITTED,DISCHARGUE_DATE,TOTAL_BALANCE_ROOM_BOARD,TOTAL_ITEMS_ROOM_BOARD,TOTAL_BALANCE_LABORATORY,TOTAL_ITEMS_LABORATORY,TOTAL_BALANCE_RADIOLOGY,TOTAL_ITEMS_RADIOLOGY) values ('1','Paciente 1','Calle 1','20170102','20170103','4164','4','2143','1',null,'0');
--------------------------------------------------------
--  DDL for Index PK_ID_BILL_DETAILS
--------------------------------------------------------

  CREATE UNIQUE INDEX "ASSIGMENTS2"."PK_ID_BILL_DETAILS" ON "ASSIGMENTS2"."BILL_DETAILS" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "ASSIGMENTS2" ;
--------------------------------------------------------
--  DDL for Index PK_ID_BILLS
--------------------------------------------------------

  CREATE UNIQUE INDEX "ASSIGMENTS2"."PK_ID_BILLS" ON "ASSIGMENTS2"."BILLS" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "ASSIGMENTS2" ;
--------------------------------------------------------
--  DDL for Index PK_ID_CITIES
--------------------------------------------------------

  CREATE UNIQUE INDEX "ASSIGMENTS2"."PK_ID_CITIES" ON "ASSIGMENTS2"."CITIES" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "ASSIGMENTS2" ;
--------------------------------------------------------
--  DDL for Index PK_ID_COST_CENTERS
--------------------------------------------------------

  CREATE UNIQUE INDEX "ASSIGMENTS2"."PK_ID_COST_CENTERS" ON "ASSIGMENTS2"."COST_CENTERS" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "ASSIGMENTS2" ;
--------------------------------------------------------
--  DDL for Index PK_ID_ITEMS
--------------------------------------------------------

  CREATE UNIQUE INDEX "ASSIGMENTS2"."PK_ID_ITEMS" ON "ASSIGMENTS2"."ITEMS" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "ASSIGMENTS2" ;
--------------------------------------------------------
--  DDL for Index PK_ID_PATIENTS
--------------------------------------------------------

  CREATE UNIQUE INDEX "ASSIGMENTS2"."PK_ID_PATIENTS" ON "ASSIGMENTS2"."PATIENTS" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "ASSIGMENTS2" ;
--------------------------------------------------------
--  DDL for Index PK_ID_STATES
--------------------------------------------------------

  CREATE UNIQUE INDEX "ASSIGMENTS2"."PK_ID_STATES" ON "ASSIGMENTS2"."STATES" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "ASSIGMENTS2" ;
--------------------------------------------------------
--  DDL for Index SYS_C007015
--------------------------------------------------------

  CREATE UNIQUE INDEX "ASSIGMENTS2"."SYS_C007015" ON "ASSIGMENTS2"."ITEMS" ("ITEM_CODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "ASSIGMENTS2" ;
--------------------------------------------------------
--  DDL for Index SYS_C007025
--------------------------------------------------------

  CREATE UNIQUE INDEX "ASSIGMENTS2"."SYS_C007025" ON "ASSIGMENTS2"."CITIES" ("ZIP") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "ASSIGMENTS2" ;
--------------------------------------------------------
--  DDL for Index SYS_C007033
--------------------------------------------------------

  CREATE UNIQUE INDEX "ASSIGMENTS2"."SYS_C007033" ON "ASSIGMENTS2"."PATIENTS" ("PATIENT_NUMBER") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "ASSIGMENTS2" ;
--------------------------------------------------------
--  DDL for Trigger UPDATES_UNITS_AVAILABLE
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "ASSIGMENTS2"."UPDATES_UNITS_AVAILABLE" 
BEFORE INSERT OR UPDATE OF ITEMS_ID ON BILL_DETAILS FOR EACH ROW
DECLARE
   ITEMS_AVAILABLES_NEW NUMBER;
   ITEMS_AVAILABLES_OLD NUMBER;
BEGIN
   IF (:old.ITEMS_ID IS NULL) THEN
    ITEMS_AVAILABLES_OLD := 0;
   ELSE
    --cantidad disponible de items viejos
    SELECT  UNITS_AVAILABLE 
    INTO    ITEMS_AVAILABLES_OLD 
    FROM    ITEMS WHERE ID  =   :old.ITEMS_ID;
   END IF;
  --cantidad disponible de items nuevos
  SELECT    UNITS_AVAILABLE 
  INTO      ITEMS_AVAILABLES_NEW 
  FROM      ITEMS 
  WHERE     ID  = :new.ITEMS_ID; 
  --verifica la existencia de unidades disponibles
  IF (ITEMS_AVAILABLES_NEW > 0) THEN
    --verifica si se esta realizando una actualización
    IF (:old.ITEMS_ID != :new.ITEMS_ID) THEN
      UPDATE    ITEMS 
      SET       UNITS_AVAILABLE = (ITEMS_AVAILABLES_OLD + 1) 
      WHERE     ID  = :old.ITEMS_ID;
    END IF;
    UPDATE  ITEMS 
    SET     UNITS_AVAILABLE = (ITEMS_AVAILABLES_NEW - 1) 
    WHERE   ID = :new.ITEMS_ID;
  ELSE
    DBMS_OUTPUT.PUT_LINE('No hay unidades disponibles');
  END IF;
END;
/
ALTER TRIGGER "ASSIGMENTS2"."UPDATES_UNITS_AVAILABLE" ENABLE;
--------------------------------------------------------
--  DDL for Procedure INCREASE_THE_COST
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "ASSIGMENTS2"."INCREASE_THE_COST" AS
begin
declare 
    --Cursor con la sentencia a consultar
    cursor Lista_Items is select id, Chargue, Cost_Centers_id from ITEMS where Cost_Centers_id in (1, 2, 3);
    --Variables
    id_item number;
    Chargue decimal(10,3);
    id_cost_center number;
    increment_charge decimal(10,3);
begin
    --Room         con id = 1
    --Laboratory   con id = 2
    --Radiology    con id = 3
    --Se inicia el cursor
    open Lista_Items;
    --Se obtiene la primera fila del resultado
    fetch Lista_Items into id_item,Chargue,id_cost_center;
    --Preguntamos si el registro obtenido es valido
    while Lista_Items%FOUND
    loop
        case id_cost_center
            when 1 then increment_charge := (Chargue * 1.02);           
            when 2 then increment_charge := (Chargue * 1.035);
            when 3 then increment_charge := (Chargue * 1.04);      
            else dbms_output.put_line('producto: ' || id_item || ' centro costos: ' || id_cost_center);
        end case;
        --Se verifica que el item pertenece al centro de costos indicado
        if((id_cost_center > 0) and (id_cost_center < 4)) then
          update ITEMS set Chargue = increment_charge where id = id_item and cost_centers_id = id_cost_center;
        end if;
        fetch Lista_Items into id_item,Chargue,id_cost_center; 
    end loop;   
    close Lista_Items;
end;
end;

/
--------------------------------------------------------
--  DDL for Function TOTAL_BALANCE_FOR_ITEMS
--------------------------------------------------------

  CREATE OR REPLACE FUNCTION "ASSIGMENTS2"."TOTAL_BALANCE_FOR_ITEMS" (VALUE1 in integer, VALUE2 in integer)
RETURN NUMBER IS
TOTAL NUMBER;
BEGIN  
     SELECT SUM(ITEMS.CHARGUE) AS "TOTAL BALANCE FOR ALL ITEMS" INTO TOTAL
            FROM        ITEMS
            INNER JOIN  COST_CENTERS
            ON          ITEMS.COST_CENTERS_ID       =   COST_CENTERS.ID
            INNER JOIN  BILL_DETAILS
            ON          ITEMS.ID                    =   BILL_DETAILS.ITEMS_ID
            INNER JOIN  BILLS 
            ON          BILL_DETAILS.BILLS_ID       =   BILLS.ID
            INNER JOIN  PATIENTS 
            ON          BILLS.PATIENTS_ID           =   PATIENTS.ID
            WHERE       COST_CENTERS.ID             =   VALUE1    
                        AND    BILLS.ID             =   VALUE2; 
RETURN TOTAL;
END;

/
--------------------------------------------------------
--  DDL for Function TOTAL_OF_NUMBER_OF_ITEMS
--------------------------------------------------------

  CREATE OR REPLACE FUNCTION "ASSIGMENTS2"."TOTAL_OF_NUMBER_OF_ITEMS" 
(VALUE1 in integer, VALUE2 in integer)
RETURN NUMBER IS 
TOTAL NUMBER;
BEGIN  
     SELECT COUNT(ITEMS.CHARGUE) AS "TOTAL NUMBER OF ITEMS" INTO TOTAL
            FROM        ITEMS
            INNER JOIN  COST_CENTERS
            ON          ITEMS.COST_CENTERS_ID       =   COST_CENTERS.ID
            INNER JOIN  BILL_DETAILS
            ON          ITEMS.ID                    =   BILL_DETAILS.ITEMS_ID
            INNER JOIN  BILLS 
            ON          BILL_DETAILS.BILLS_ID       =   BILLS.ID
            INNER JOIN  PATIENTS 
            ON          BILLS.PATIENTS_ID           =   PATIENTS.ID
            WHERE       COST_CENTERS.ID             =   VALUE1    
                        AND    BILLS.ID             =   VALUE2; 
RETURN TOTAL;
END;

/
--------------------------------------------------------
--  Constraints for Table BILL_DETAILS
--------------------------------------------------------

  ALTER TABLE "ASSIGMENTS2"."BILL_DETAILS" ADD CONSTRAINT "PK_ID_BILL_DETAILS" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "ASSIGMENTS2"  ENABLE;
  ALTER TABLE "ASSIGMENTS2"."BILL_DETAILS" MODIFY ("ITEMS_ID" NOT NULL ENABLE);
  ALTER TABLE "ASSIGMENTS2"."BILL_DETAILS" MODIFY ("BILLS_ID" NOT NULL ENABLE);
  ALTER TABLE "ASSIGMENTS2"."BILL_DETAILS" MODIFY ("DATE_CHARGE" NOT NULL ENABLE);
  ALTER TABLE "ASSIGMENTS2"."BILL_DETAILS" MODIFY ("ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table BILLS
--------------------------------------------------------

  ALTER TABLE "ASSIGMENTS2"."BILLS" ADD CONSTRAINT "PK_ID_BILLS" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "ASSIGMENTS2"  ENABLE;
  ALTER TABLE "ASSIGMENTS2"."BILLS" MODIFY ("PATIENTS_ID" NOT NULL ENABLE);
  ALTER TABLE "ASSIGMENTS2"."BILLS" MODIFY ("BALANCE_DUE" NOT NULL ENABLE);
  ALTER TABLE "ASSIGMENTS2"."BILLS" MODIFY ("DISCHARGUE_DATE" NOT NULL ENABLE);
  ALTER TABLE "ASSIGMENTS2"."BILLS" MODIFY ("DATE_ADMITTED" NOT NULL ENABLE);
  ALTER TABLE "ASSIGMENTS2"."BILLS" MODIFY ("DATES" NOT NULL ENABLE);
  ALTER TABLE "ASSIGMENTS2"."BILLS" MODIFY ("ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table CITIES
--------------------------------------------------------

  ALTER TABLE "ASSIGMENTS2"."CITIES" ADD UNIQUE ("ZIP")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "ASSIGMENTS2"  ENABLE;
  ALTER TABLE "ASSIGMENTS2"."CITIES" ADD CONSTRAINT "PK_ID_CITIES" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "ASSIGMENTS2"  ENABLE;
  ALTER TABLE "ASSIGMENTS2"."CITIES" MODIFY ("STATES_ID" NOT NULL ENABLE);
  ALTER TABLE "ASSIGMENTS2"."CITIES" MODIFY ("ZIP" NOT NULL ENABLE);
  ALTER TABLE "ASSIGMENTS2"."CITIES" MODIFY ("CITY" NOT NULL ENABLE);
  ALTER TABLE "ASSIGMENTS2"."CITIES" MODIFY ("ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table COST_CENTERS
--------------------------------------------------------

  ALTER TABLE "ASSIGMENTS2"."COST_CENTERS" ADD CONSTRAINT "PK_ID_COST_CENTERS" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "ASSIGMENTS2"  ENABLE;
  ALTER TABLE "ASSIGMENTS2"."COST_CENTERS" MODIFY ("COST_NAME" NOT NULL ENABLE);
  ALTER TABLE "ASSIGMENTS2"."COST_CENTERS" MODIFY ("COST_CODE" NOT NULL ENABLE);
  ALTER TABLE "ASSIGMENTS2"."COST_CENTERS" MODIFY ("ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table ITEMS
--------------------------------------------------------

  ALTER TABLE "ASSIGMENTS2"."ITEMS" ADD UNIQUE ("ITEM_CODE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "ASSIGMENTS2"  ENABLE;
  ALTER TABLE "ASSIGMENTS2"."ITEMS" ADD CONSTRAINT "PK_ID_ITEMS" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "ASSIGMENTS2"  ENABLE;
  ALTER TABLE "ASSIGMENTS2"."ITEMS" MODIFY ("COST_CENTERS_ID" NOT NULL ENABLE);
  ALTER TABLE "ASSIGMENTS2"."ITEMS" MODIFY ("CHARGUE" NOT NULL ENABLE);
  ALTER TABLE "ASSIGMENTS2"."ITEMS" MODIFY ("DESCRIPTION" NOT NULL ENABLE);
  ALTER TABLE "ASSIGMENTS2"."ITEMS" MODIFY ("ITEM_CODE" NOT NULL ENABLE);
  ALTER TABLE "ASSIGMENTS2"."ITEMS" MODIFY ("ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table PATIENTS
--------------------------------------------------------

  ALTER TABLE "ASSIGMENTS2"."PATIENTS" ADD UNIQUE ("PATIENT_NUMBER")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "ASSIGMENTS2"  ENABLE;
  ALTER TABLE "ASSIGMENTS2"."PATIENTS" ADD CONSTRAINT "PK_ID_PATIENTS" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "ASSIGMENTS2"  ENABLE;
  ALTER TABLE "ASSIGMENTS2"."PATIENTS" MODIFY ("CITIES_ID" NOT NULL ENABLE);
  ALTER TABLE "ASSIGMENTS2"."PATIENTS" MODIFY ("PATIENT_ADDRESS" NOT NULL ENABLE);
  ALTER TABLE "ASSIGMENTS2"."PATIENTS" MODIFY ("PATIENT_NAME" NOT NULL ENABLE);
  ALTER TABLE "ASSIGMENTS2"."PATIENTS" MODIFY ("PATIENT_NUMBER" NOT NULL ENABLE);
  ALTER TABLE "ASSIGMENTS2"."PATIENTS" MODIFY ("ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table STATES
--------------------------------------------------------

  ALTER TABLE "ASSIGMENTS2"."STATES" ADD CONSTRAINT "PK_ID_STATES" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "ASSIGMENTS2"  ENABLE;
  ALTER TABLE "ASSIGMENTS2"."STATES" MODIFY ("STATE_NAME" NOT NULL ENABLE);
  ALTER TABLE "ASSIGMENTS2"."STATES" MODIFY ("ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Ref Constraints for Table BILL_DETAILS
--------------------------------------------------------

  ALTER TABLE "ASSIGMENTS2"."BILL_DETAILS" ADD CONSTRAINT "FK_BILLS_ID" FOREIGN KEY ("BILLS_ID")
	  REFERENCES "ASSIGMENTS2"."BILLS" ("ID") ENABLE;
  ALTER TABLE "ASSIGMENTS2"."BILL_DETAILS" ADD CONSTRAINT "FK_ITEMS_ID" FOREIGN KEY ("ITEMS_ID")
	  REFERENCES "ASSIGMENTS2"."ITEMS" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table BILLS
--------------------------------------------------------

  ALTER TABLE "ASSIGMENTS2"."BILLS" ADD CONSTRAINT "FK_PATIENTS_ID" FOREIGN KEY ("PATIENTS_ID")
	  REFERENCES "ASSIGMENTS2"."PATIENTS" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table CITIES
--------------------------------------------------------

  ALTER TABLE "ASSIGMENTS2"."CITIES" ADD CONSTRAINT "FK_STATES_ID" FOREIGN KEY ("STATES_ID")
	  REFERENCES "ASSIGMENTS2"."STATES" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table ITEMS
--------------------------------------------------------

  ALTER TABLE "ASSIGMENTS2"."ITEMS" ADD CONSTRAINT "FK_COST_CENTERS_ID" FOREIGN KEY ("COST_CENTERS_ID")
	  REFERENCES "ASSIGMENTS2"."COST_CENTERS" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table PATIENTS
--------------------------------------------------------

  ALTER TABLE "ASSIGMENTS2"."PATIENTS" ADD CONSTRAINT "FK_CITIES_ID" FOREIGN KEY ("CITIES_ID")
	  REFERENCES "ASSIGMENTS2"."CITIES" ("ID") ENABLE;
